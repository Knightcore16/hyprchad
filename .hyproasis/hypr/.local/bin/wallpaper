#!/bin/bash

INTERVAL=300
SATURATION=0.5
BACKGROUND_COLOR="#1e1e2e"
FOREGROUND_COLOR="#cdd6f4"

WALLHISTSIZE="${WALLHISTSIZE:-100}"
MONITOR=$(hyprctl monitors | grep Monitor | awk '{print $2}')
SHADERS_PATH="${SCREEN_SHADER_PATH:-HOME/.config/hypr/shaders}"
WALLPAPERS_PATH="${WALLPAPER_DIR:-$HOME/.local/share/wallpapers}"
WALLPAPER_STATE_DIR="${WALLPAPER_STATE:-$HOME/.local/state/wallpaper}"

make_state() {
	[ ! -d "$WALLPAPERS_PATH" ] && echo "[ INFO ] $WALLPAPERS_PATH does not exist" >"$WALLPAPER_STATE_DIR/log" && exit 1
	[ ! -d "$WALLPAPER_STATE_DIR" ] && mkdir -p "$WALLPAPER_STATE_DIR"
	[ ! -f "$WALLPAPER_STATE_DIR/cache_index" ] && echo "0" >"$WALLPAPER_STATE_DIR/cache_index"
	[ ! -f "$WALLPAPER_STATE_DIR/cache" ] && touch "$WALLPAPER_STATE_DIR/cache" && cache_wallpapers
	[ ! -f "$WALLPAPER_STATE_DIR/index" ] && echo "0" >"$WALLPAPER_STATE_DIR/index"
	[ ! -f "$WALLPAPER_STATE_DIR/state" ] && touch "$WALLPAPER_STATE_DIR/cache" && load_wallpaper
}

cache_wallpapers() {
	make_state
	wallpapers=$(find "$WALLPAPERS_PATH/" -type f -iregex '.*\.\(jpg\|jpeg\|png\|gif\)$')
	echo "$wallpapers" | shuf >"$WALLPAPER_STATE_DIR/cache"
	echo "0" >"$WALLPAPER_STATE_DIR/cache_index"
	echo "[ INFO ] Cached $(wc -l <"$WALLPAPER_STATE_DIR/cache") wallpapers" >>"$WALLPAPER_STATE_DIR/log"
}

load_wallpaper() {
	make_state
	cache_size=$(wc -l <"$WALLPAPER_STATE_DIR/cache")
	cache_index=$(cat "$WALLPAPER_STATE_DIR/cache_index")
	state_size=$(wc -l <"$WALLPAPER_STATE_DIR/state" 2>/dev/null || echo 0)

	if [ "$cache_index" -ge "$cache_size" ]; then
		cache_wallpapers
		cache_index=0
	fi

	wallpaper=$(sed -n "$((cache_index + 1))p" "$WALLPAPER_STATE_DIR/cache")
	echo "$wallpaper" >>"$WALLPAPER_STATE_DIR/state"

	if [ "$state_size" -gt "$WALLHISTSIZE" ]; then
		sed -i "1,$((state_size - WALLHISTSIZE))d" "$WALLPAPER_STATE_DIR/state"
	fi

	cache_index=$((cache_index + 1))
	echo "$cache_index" >"$WALLPAPER_STATE_DIR/cache_index"
}

set_wallpaper() {
	WALLPAPER="$1"
	ACTIVE_SHADER=$(hyprshade current)

	# echo "[ INFO ] Applying wal colors" >>"$WALLPAPER_STATE_DIR/log"
	# wal --cols16 -n -e -s -b "$BACKGROUND_COLOR" --fg "$FOREGROUND_COLOR" --saturate $SATURATION -i "$WALLPAPER"

	echo "[ INFO ] Creating wallpaper link" >>"$WALLPAPER_STATE_DIR/log"
	ln -f "$WALLPAPER" "$WALLPAPERS_PATH/background"

	echo "[ INFO ] Applying wallpaper $WALLPAPER" >>"$WALLPAPER_STATE_DIR/log"
	hyprctl hyprpaper unload all
	hyprctl hyprpaper preload "$WALLPAPER"
	hyprctl hyprpaper wallpaper "$MONITOR, $WALLPAPER"

	# echo "[ INFO ] Applying shader $ACTIVE_SHADER" >>"$WALLPAPER_STATE_DIR/log"
	# hyprshade toggle "$SHADERS_PATH/$ACTIVE_SHADER.glsl"
}

set_wallpaper_by_index() {
	make_state
	WALLPAPER=$(sed -n "$1p" "$WALLPAPER_STATE_DIR/state")
	set_wallpaper "$WALLPAPER"
}

next_wallpaper() {
	make_state
	index=$(cat "$WALLPAPER_STATE_DIR/index")
	index=$((index + 1))

	if [ "$index" -ge "$(wc -l <"$WALLPAPER_STATE_DIR/state")" ]; then
		load_wallpaper
	fi

	echo "$index" >"$WALLPAPER_STATE_DIR/index"
	set_wallpaper_by_index "$index"
}

previous_wallpaper() {
	make_state
	index=$(cat "$WALLPAPER_STATE_DIR/index")
	index=$((index - 1))

	if [ "$index" -lt 0 ]; then
		index=$(($(wc -l <"$WALLPAPER_STATE_DIR/state") - 1))
	fi

	echo "$index" >"$WALLPAPER_STATE_DIR/index"
	set_wallpaper_by_index "$index"
}

play_slideshow() {
	make_state
	echo "[ INFO ] Playing Slideshow" >>"$WALLPAPER_STATE_DIR/log"
	while true; do
		next_wallpaper
		sleep $INTERVAL
	done
}

pause_slideshow() {
	make_state
	echo "[ INFO ] Slideshow paused" >>"$WALLPAPER_STATE_DIR/log"
	killall wallpaper 2>/dev/null
}

toggle_slideshow() {
	if pgrep -f "bash.*wallpaper" >/dev/null; then
		pause_slideshow
	else
		play_slideshow &
	fi
}

# case "$1" in
# "image") set_wallpaper "$2" ;;

# "play") play_slideshow ;;
# "pause") pause_slideshow ;;
# "toggle") toggle_slideshow ;;

# "next") next_wallpaper ;;
# "prev") previous_wallpaper ;;
# *) exit 1 ;;
# esac
