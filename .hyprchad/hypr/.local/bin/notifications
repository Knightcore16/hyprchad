#!/bin/bash

status_icon=""
notifications_count=0

status() {
	notifications_count=$(dunstctl count waiting)
	is_paused=$(dunstctl is-paused)

	if [ "$is_paused" = "false" ]; then
		if [ "$notifications_count" -gt 0 ]; then
			status_icon=""
		else
			status_icon=""
		fi
	else
		if [ "$notifications_count" -gt 0 ]; then
			status_icon=""
		else
			status_icon=""
		fi
	fi

	status=$(jq --unbuffered --compact-output <<<"{
    \"text\": \"$status_icon\",
    \"tooltip\": \"$status_icon  $notifications_count notification(s)\"
    }")

	echo "$status"
}

show_all() {
	notifications=$(dunstctl history | jq -c '.data[] | .[]')

	while read -r notification; do
		body=$(echo "$notification" | jq -r '.body.data')
		summary=$(echo "$notification" | jq -r '.summary.data')
		appname=$(echo "$notification" | jq -r '.appname.data')
		category=$(echo "$notification" | jq -r '.category.data')
		icon=$(echo "$notification" | jq -r '.icon_path.data')
		id=$(echo "$notification" | jq -r '.id.data')
		timestamp=$(echo "$notification" | jq -r '.timestamp.data')
		progress=$(echo "$notification" | jq -r '.progress.data')

		notify-send \
			-t 0 \
			-u normal \
			-i "$icon" \
			-c "$category" \
			-a "$appname nohistory" \
			-h int:value:"$progress" \
			"$summary" "$body"

	done <<<"$notifications"
}

volume() {
	status=$(wpctl get-volume @DEFAULT_AUDIO_SINK@)
	volume=$(echo "$status" | awk '{print int($2 * 100)}')
	muted=$(
		echo "$status" | grep -q "\[MUTED\]"
		echo $?
	)

	if [ "$muted" -eq 0 ]; then
		notify-send -a "volume mute" "Master Volume is Muted"
	else
		notify-send -a "volume" -h int:value:"$volume" "Master Volume: $volume%"
	fi
}

mic() {
	status=$(wpctl get-volume @DEFAULT_AUDIO_SOURCE@)
	volume=$(echo "$status" | awk '{print int($2 * 100)}')
	muted=$(
		echo "$status" | grep -q "\[MUTED\]"
		echo $?
	)

	if [ "$muted" -eq 0 ]; then
		notify-send -a "mic mute" "Mic is Muted"
	else
		notify-send -a "mic" -h int:value:"$volume" "Mic Volume: $volume%"
	fi
}

brightness() {
	brightness=$(brightnessctl get)
	max_brightness=$(brightnessctl max)
	percent=$((brightness * 100 / max_brightness))
	notify-send -a "volume" -h int:value:"$percent" "Volume"
}

case $1 in
status) status ;;
showall) show_all ;;
volume) volume ;;
mic) mic ;;
brightness) brightness ;;
esac
